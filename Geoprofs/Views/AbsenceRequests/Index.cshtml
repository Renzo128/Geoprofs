@model IEnumerable<Geoprofs.Models.AbsenceRequest>

@{
	ViewData["Title"] = "Index";
}

<h1>Verlof goedkeuren</h1>
<div class="button-container">
	@{
		int val = (int)TempData["role"];
	}
	@if (val == 7)
	{	// uren doorsturen naar betalingsinstantie
		<a class="button padding" asp-area="" asp-controller="Betalingsinstantie" asp-action="Index">Uren naar betalingsinstantie</a>
	}
	@{
		TempData.Keep("role");
	}
	@using (Html.BeginForm("reload", "AbsenceRequests"))
	{	// meerdere verlof aanvragen tegelijk goedkeuren en afwijzen
		<div class="button-container" style="margin: 0;">
		<button type="submit" onclick="rejected()" class="button padding">Geselecteerde afkeuren</button>
		<button type="submit" onclick="accept()" class="button padding">Geselecteerde goedkeuren</button>
		</div>
	}
</div>
<div class="overflow-auto">
<table class="table">
	<thead>
		<tr><!-- table met alle verlof aanvragen die nog openstaand zijn-->
			<th>
				Select
			</th>
			<th>
				Naam
			</th>
			<th>
				Begin datum
			</th>
			<th>
				Eind datum
			</th>
			<th class="note">
				Bericht
			</th>
			<th>
				Afwezigheids soort
			</th>
			<th>
				Actie
			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
				TempData.Keep("isSupervisor");

			@if (item.absenceStatus == "Openstaand" && item.coworker.supervisor == (int)TempData["isSupervisor"])
			{
				TempData.Keep("isSupervisor");


				<tr>
					<td>
						<label>
							<input type="checkbox" />
							<span runat="server" id="temp_@item.absenceId" onclick="addToArray(this.id)" class="checkbox"></span>
						</label>
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.coworker.CoworkerName)
					</td>
					<td>
						@{
							string start = item.AbsenceStart.Day +"-"+ item.AbsenceStart.Month+"-"+item.AbsenceStart.Year;
						}
						@start
					</td>
					<td>
						@{
							string end = item.AbsenceEnd.Day + "-" + item.AbsenceEnd.Month + "-" + item.AbsenceEnd.Year;
						}
						@end
					</td>
					<td class="note-col	">
						@Html.DisplayFor(modelItem => item.Note)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.AbsenceType.absenceName)
					</td>
					<td>
						@using (Html.BeginForm("edit_Accept", "AbsenceRequests"))
						{
							<input type="hidden" runat="server" value="id_@item.absenceId" id=id_@item.absenceId name="id_@item.absenceId" />
							<input type="hidden" value="@item.coworker" id="Coworker_@item.absenceId" name="Coworker_@item.absenceId" />
							<input type="hidden" value="@item.AbsenceStart" id="absencestart_@item.absenceId" name="absencestart_@item.absenceId" />
							<input type="hidden" value="@item.AbsenceEnd" id="absenceend_@item.absenceId" name="absenceend_@item.absenceId" />
							<input type="hidden" value="@item.Note" id="note_@item.absenceId" name="note_@item.absenceId" />
							<input type="hidden" value="@item.absenceType" id="type_@item.absenceId" name="type_@item.absenceId" />
							<input type="hidden" value="@item.absenceStatus" id="status_@item.absenceId" name="status_@item.absenceId" />

							<div class="options-icon" onclick="ShowPopUp('@item.absenceId')"><img src="/media/Mask Group 7.png" /></div>
							<div class="pop-up" id="@item.absenceId">
								<button type="submit" runat="server" id="@item.absenceId" name="id" value="@item.absenceId" onclick="acceptRequest(this.id)" class="color-green button-reset">Goedkeuren</button>
								<p> | </p>
								<button type="submit" runat="server" id="@item.absenceId" name="id" value="@item.absenceId" onclick="denieRequest(this.id)" class="color-red button-reset">Afkeuren</button>


							</div>
						}
					</td>
				</tr>
			}
		}
	</tbody>
</table>
</div>
<script>
	function acceptRequest(id){	// meerdere aanvragen accepteren
		document.getElementById("id_"+id).value = "Geaccepteerd";
		console.log(id)

	};
	function denieRequest(id){// meerdere aanvragen weigeren

		document.getElementById("id_"+id).value = "Geweigerd";

	};
	var arr = [];

	function addToArray(val){	// alle geselecteerde verlof aanvragen ophalen

		const myArray = val.split("_");
		let word = myArray[1];

		if(arr.includes(word)){
			const index = arr.indexOf(word);
			arr.splice(index, 1);
		}
		else{
		arr.push(word)
		}
	}

	function accept(){	//verlof aanvragen accepteren
		$.ajax({
		type: "GET",
		url: 'AbsenceRequests/success',
		contentType: "application/json; charset=utf-8",
		data:{"arr": arr},
		traditional: true,
		dataType: "json",
		success: function(response) {location.reload(); },
		error: function(response) {location.reload();}
		});
	};

		function rejected(){	// verlof aanvragen afwijzen
		$.ajax({
		type: "GET",
		url: 'AbsenceRequests/rejected',
		contentType: "application/json; charset=utf-8",
		data:{"arr": arr},
		traditional: true,
		dataType: "json",
		success: function(response) {location.reload();},
		error: function(response) {location.reload();}
		});
	};



</script>